syntax = "proto3";

package vortexproto.operations.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "types/operation.proto";

option go_package = "github.com/nightblue-io/vortex-go/operations";

// Operations service definition.
service Operations {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(ALPHA) Operations API. Base URL: https://api.nightblue.io"
    external_docs: {
      url: "https://github.com/nightblue-io/vortex-proto/tree/main/operations/v1";
      description: "See here for the service definition.";
    }
  };

  // List long-running operations.
  rpc ListOperations(ListOperationsRequest) returns (ListOperationsResponse) {
    option (google.api.http) = {
      get: "/vortex/ops/v1"
    };
  }

  // Get a long-running operation.
  rpc GetOperation(GetOperationRequest) returns (vortexproto.types.Operation) {
    option (google.api.http) = {
      get: "/vortex/ops/v1/{name}"
    };
  }

  // Delete a long-running operation.
  rpc DeleteOperation(DeleteOperationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/vortex/ops/v1/{name}"
    };
  }

  // Cancel a long-running operation.
  rpc CancelOperation(CancelOperationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/vortex/ops/v1/{name}:cancel"
      body: "*"
    };
  }

  // Wait on a long-running operation.
  rpc WaitOperation(WaitOperationRequest) returns (vortexproto.types.Operation) {
  }
}

// Request message for the ListOperations rpc.
message ListOperationsRequest {
  string name = 1;
  string next_token = 2;
}

// Response message for the ListOperations rpc.
message ListOperationsResponse {
  repeated vortexproto.types.Operation operations = 1;
  string next_token = 2;
}

// Request message for the GetOperation rpc.
message GetOperationRequest {
  string name = 1;
}

// Request message for the DeleteOperation rpc.
message DeleteOperationRequest {
  string name = 1;
}

// Request message for the CancelOperation rpc.
message CancelOperationRequest {
  string name = 1;
}

// Request message for the WaitOperation rpc.
message WaitOperationRequest {
  string name = 1;
}
