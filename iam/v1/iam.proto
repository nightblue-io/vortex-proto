syntax = "proto3";

package vortexproto.iam.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/vortex-io/vortexproto/iam";

// Iam service definition.
service Iam {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(ALPHA) IAM API. Base URL: https://api.nightblue.io"
    external_docs: {
      url: "https://github.com/nightblue-io/vortex-proto/tree/main/iam/v1";
      description: "See here for the service definition.";
    }
  };

  // Create an account for the Vortex Platform.
  rpc SignUp(SignUpRequest) returns (SignUpResponse) {
    option (google.api.http) = {
      post: "/vortex/iam/v0/signup"
      body: "*"
    };
  }

  // Create an account for the Vortex Platform.
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/vortex/iam/v0/login"
      body: "*"
    };
  }

  // Testing endpoint.
  rpc WhoAmI(WhoAmIRequest) returns (WhoAmIResponse) {
    option (google.api.http) = {
      get: "/vortex/iam/v0/whoami"
    };
  }
}

// Request message for the SignUp rpc.
message SignUpRequest {
  // Optional. The name of the account to register.
  string name = 1;

  // Required. The email address of the account to register.
  string email = 2;

  // Optional. A generated password will be provided if empty.
  string password = 3;
}

// Response message for the SignUp rpc.
message SignUpResponse {
  string id = 1;
  string name = 2;
  string email = 3;
  string password = 4;
}

// Request message for the Login rpc.
message LoginRequest {
  string id = 1;
  string password = 2;
}

// Response message for the Login rpc.
message LoginResponse {
  string token = 1;
}

// Request message for the WhoAmI rpc.
message WhoAmIRequest {}

// Request message for the WhoAmI rpc.
message WhoAmIResponse {
  string id = 1;
  string name = 2;
  string email = 3;
}

